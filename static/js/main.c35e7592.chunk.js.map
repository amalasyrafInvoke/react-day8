{"version":3,"sources":["reducers/search/index.js","components/header/index.js","reducers/movie/index.js","components/movie/index.js","components/movielist/index.js","containers/home/index.js","containers/details/index.js","App.js","reducers/index.js","store/configureStore.js","index.js"],"names":["searchSlice","createSlice","name","initialState","value","reducers","addSearch","state","action","payload","actions","Header","searchInput","useRef","dispatch","useDispatch","className","onSubmit","e","preventDefault","alert","size","type","placeholder","id","ref","el","moviesApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getMoviesByName","query","url","params","apikey","s","getMovieDetail","i","useGetMoviesByNameQuery","useGetMovieDetailQuery","pokemonApi","us","getPokemonByName","Movie","useGetPokemonByNameQuery","props","data","navigate","useNavigate","onClick","imdbID","Poster","src","alt","Title","Year","Type","MovieList","searchValue","useSelector","search","isLoading","console","log","Response","Search","map","item","Error","Home","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Details","location","useParams","useState","actors","setActors","useEffect","Actors","split","options","height","width","style","backgroundImage","to","Rated","Released","Runtime","Director","Writer","actor","Plot","Language","BoxOffice","App","path","index","element","combineReducers","reducer","persistConfig","key","version","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","basename","process","document","getElementById"],"mappings":"yMAEaA,EAAcC,YAAY,CACrCC,KAAM,SACNC,aAAc,CACZC,MAAO,UAETC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACjBD,EAAMH,MAAQI,EAAOC,YAKZH,EAAcN,EAAYU,QAA1BJ,UACAN,IAAf,Q,OC0BeW,EAnCA,WACb,IAAIC,EAAcC,mBACZC,EAAWC,cAWjB,OACE,wBAAQC,UAAU,gEAAlB,SACE,uBAAMA,UAAU,wDAAwDC,SAXlD,SAACC,GACzBA,EAAEC,iBACGP,EAAYR,MAIjBU,EAASR,EAAUM,EAAYR,QAH7BgB,MAAM,0BAQN,UACE,cAAC,IAAD,CAAeC,KAAM,KACrB,uBACEC,KAAK,OACLC,YAAW,oBACXC,GAAG,SACHR,UAAU,kDACVS,IAAK,SAACC,GAAD,OAASd,EAAcc,KAE9B,wBACEJ,KAAK,SACLN,UAAU,qFAFZ,SAIE,cAAC,IAAD,Y,eC/BGW,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QAAS,6BACrCC,UAAW,SAACC,GAAD,MAAc,CACvBC,gBAAiBD,EAAQE,MAAM,CAC7BA,MAAO,SAAClC,GAAD,MAAW,CAChBmC,IAAK,IACLC,OAAQ,CACNC,OAAQ,WACRC,EAAGtC,OAITuC,eAAgBP,EAAQE,MAAM,CAC5BA,MAAO,SAACZ,GAAD,MAAS,CACda,IAAK,IACLC,OAAQ,CACNC,OAAQ,WACRG,EAAGlB,WAOEmB,EAAwDhB,EAAxDgB,wBAAyBC,EAA+BjB,EAA/BiB,uBAE3BC,GAF0DlB,EAAPmB,GAEtClB,YAAU,CAClCC,YAAa,aACbC,UAAWC,YAAe,CAAEC,QAAS,+BACrCC,UAAW,SAACC,GAAD,MAAc,CACvBa,iBAAkBb,EAAQE,MAAM,CAC9BA,MAAO,SAAClC,GAAD,wBAAqBA,WCCnB8C,GDI6BH,EAA7BI,yBCtCD,SAACC,GAAW,IAChBC,EAASD,EAATC,KACFC,EAAWC,cAKjB,OACE,sBACEC,QAAS,kBALQ9B,EAKU2B,EAAKI,YAJlCH,EAAS,eAAD,OAAgB5B,IADN,IAACA,GAMjBR,UAAU,iGAFZ,UAIE,qBAAKA,UAAU,gDAAf,SACmB,QAAhBmC,EAAKK,OACJ,qBAAKxC,UAAU,kEAAf,SACE,sDAGF,qBACEyC,IAAKN,EAAKK,OACVE,IAAKP,EAAKQ,MACV3C,UAAU,wBAIhB,sBAAKA,UAAU,kFAAf,UACE,6BAAKmC,EAAKQ,QACV,6BAAKR,EAAKS,OACV,oBAAI5C,UAAU,aAAd,SAA4BmC,EAAKU,eCC1BC,EA3BG,WAChB,IAAMC,EAAcC,aAAY,SAACzD,GAAD,OAAWA,EAAM0D,OAAO7D,SADlC,EAEMuC,EAAwBoB,GAA5CZ,EAFc,EAEdA,KAAMe,EAFQ,EAERA,UAId,OAFAC,QAAQC,IAAIjB,GAGV,qBAAKnC,UAAU,sFAAf,SACIkD,EAaA,+CAZkB,SAAlBf,EAAKkB,SACH,mCACE,qBAAKrD,UAAU,oDAAf,SACGmC,EAAKmB,OAAOC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAOrB,KAAMqB,GAAWA,EAAKjB,eAKnC,wCAAWJ,EAAKsB,YCPXC,EAZF,WACX,OACE,gCACE,cAAC,EAAD,IACA,oBAAI1D,UAAU,uEAAd,yBAGA,cAAC,EAAD,Q,iCCHA2D,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,c,MACAC,iBAAkB,CAChBC,oBAAqB,mBAkFVC,EA9EC,WACd,IAAMC,EAAWC,cADG,EAEQvC,EAAuBsC,EAAS1D,IAApD2B,EAFY,EAEZA,KAAMe,EAFM,EAENA,UACdC,QAAQC,IAAIjB,GAHQ,MAIQiC,mBAAS,IAJjB,mBAIbC,EAJa,KAILC,EAJK,KAapB,OAPAC,qBAAU,WACJpC,GACFmC,EAAUnC,EAAKqC,OAAOC,MAAM,MAE9BtB,QAAQC,IAAIiB,KACX,CAAClC,IAGF,qBAAKnC,UAAU,2BAAf,SACGkD,EACC,sBAAKlD,UAAU,gEAAf,UACE,cAAC,IAAD,CAAQ0E,QAASf,EAAgBgB,OAAQ,IAAKC,MAAO,MACrD,+CAGF,qCACE,qBAAK5E,UAAU,uDAAf,SACmB,QAAhBmC,EAAKK,OACJ,qBAAKxC,UAAU,oEAAf,SACE,uDAGF,qCACE,qBACEA,UAAU,oGACV6E,MAAO,CAAEC,gBAAgB,OAAD,OAAS3C,EAAKK,OAAd,QAE1B,qBACExC,UAAU,gFACV6E,MAAO,CAAEC,gBAAgB,OAAD,OAAS3C,EAAKK,OAAd,aAOhC,sBAAKxC,UAAU,QAAf,UACE,eAAC,IAAD,CACEA,UAAU,uDACV+E,GAAG,IAFL,UAIE,cAAC,IAAD,IACA,sDAEF,sBAAK/E,UAAU,6BAAf,UACE,6BAAKmC,EAAKQ,QACV,6BAAKR,EAAKS,OACV,yCAAYT,EAAK6C,SACjB,4CAAe7C,EAAK8C,YACpB,2CAAc9C,EAAK+C,WACnB,4CAAe/C,EAAKgD,YACpB,0CAAahD,EAAKiD,UAClB,gCACE,yCACCf,EAAOd,KAAI,SAAC8B,GAAD,OACV,sBAAKrF,UAAU,8BAAf,UACE,cAAC,IAAD,IACA,4BAAIqF,aAIV,wCAAWlD,EAAKmD,QAChB,4CAAenD,EAAKoD,YACpB,8CAAiBpD,EAAKqD,yBCxErBC,I,EAAAA,EATf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,KAAK,kBAAkBE,QAAS,cAAC,EAAD,U,gDCH9BC,eAAe,mBAC3BhE,EAAWhB,YAAcgB,EAAWiE,SADT,cAE3BnF,EAAUE,YAAeF,EAAUmF,SAFR,uBAG5B7C,GAH4B,ICSxB8C,EAAgB,CACpBC,IAAK,OACLC,QAAS,EACTC,aAGIC,EAAmBC,YAAeL,EAAeM,GAEjDC,EAAQC,YAAe,CAC3BT,QAASK,EACTK,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,WAK9DC,EAAYC,YAAab,GCvB7Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhB,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaiB,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,IAAD,CAAeM,SAAUC,cAAzB,SACE,cAAC,EAAD,YAKRC,SAASC,eAAe,U","file":"static/js/main.c35e7592.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState: {\n    value: 'Batman',\n  },\n  reducers: {\n    addSearch: (state, action) => {\n      state.value = action.payload;\n    }\n  }\n})\n\nexport const { addSearch } = searchSlice.actions;\nexport default searchSlice.reducer;","import { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaSearch } from 'react-icons/fa';\nimport { MdLocalMovies } from 'react-icons/md';\nimport { addSearch } from '../../reducers/search';\n\nconst Header = () => {\n  let searchInput = useRef();\n  const dispatch = useDispatch();\n\n  const handleSearchClick = (e) => {\n    e.preventDefault();\n    if (!searchInput.value) {\n      alert('Input cannot be empty');\n      return;\n    }\n    dispatch(addSearch(searchInput.value));\n  };\n\n  return (\n    <header className='h-32 w-full bg-green-700 flex items-center justify-center p-4'>\n      <form className='flex w-full items-center justify-center p-4 space-x-8' onSubmit={handleSearchClick}>\n        <MdLocalMovies size={35} />\n        <input\n          type='text'\n          placeholder={`Search movie here`}\n          id='search'\n          className='p-2 w-1/2 rounded-md mx-2 text-center shadow-md'\n          ref={(el) => (searchInput = el)}\n        />\n        <button\n          type='submit'\n          className='rounded-lg bg-green-300 py-3 px-6 mx-2 w-auto flex justify-center hover:opacity-80'\n        >\n          <FaSearch />\n        </button>\n      </form>\n    </header>\n  );\n};\n\nexport default Header;\n","// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const moviesApi = createApi({\n  reducerPath: 'moviesApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://www.omdbapi.com/' }),\n  endpoints: (builder) => ({\n    getMoviesByName: builder.query({\n      query: (name) => ({\n        url: '/',\n        params: {\n          apikey: 'fd7cf733',\n          s: name\n        }\n      }),\n    }),\n    getMovieDetail: builder.query({\n      query: (id) => ({\n        url: '/',\n        params: {\n          apikey: 'fd7cf733',\n          i: id\n        }\n      })\n    }),\n  }),\n});\n\nexport const { useGetMoviesByNameQuery, useGetMovieDetailQuery, us } = moviesApi;\n\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2/' }),\n  endpoints: (builder) => ({\n    getPokemonByName: builder.query({\n      query: (name) => `pokemon/${name}`,\n    }),\n  }),\n});\n\nexport const { useGetPokemonByNameQuery } = pokemonApi;\n","import { useNavigate } from 'react-router-dom';\n\nconst Movie = (props) => {\n  const { data } = props;\n  const navigate = useNavigate();\n\n  const goToDetails = (id) => {\n    navigate(`/movie-list/${id}`);\n  };\n  return (\n    <div\n      onClick={() => goToDetails(data.imdbID)}\n      className='md:w-1/2 lg:w-1/3 w-full h-96 m-8 rounded-md flex items-center justify-evenly hover:opacity-90'\n    >\n      <div className='w-1/2 flex items-center justify-center h-full'>\n        {data.Poster === 'N/A' ? (\n          <div className='bg-green-100 w-full min-h-full flex items-center justify-center'>\n            <p>Image Not Available</p>\n          </div>\n        ) : (\n          <img\n            src={data.Poster}\n            alt={data.Title}\n            className='w-full min-h-full'\n          />\n        )}\n      </div>\n      <div className='w-1/2 h-full bg-white p-4 text-center flex flex-col items-center justify-center'>\n        <h1>{data.Title}</h1>\n        <h1>{data.Year}</h1>\n        <h1 className='capitalize'>{data.Type}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import { useSelector } from 'react-redux';\nimport { useGetMoviesByNameQuery } from '../../reducers/movie';\nimport Movie from '../movie';\n\nconst MovieList = () => {\n  const searchValue = useSelector((state) => state.search.value);\n  const { data, isLoading } = useGetMoviesByNameQuery(searchValue);\n\n  console.log(data);\n\n  return (\n    <div className='w-full min-h-screen bg-green-700 py-6 px-8 flex flex-col items-center justify-start'>\n      {!isLoading ? (\n        data.Response === 'True' ? (\n          <>\n            <div className='w-full flex items-center justify-center flex-wrap'>\n              {data.Search.map((item) => (\n                <Movie data={item} key={item.imdbID} />\n              ))}\n            </div>\n          </>\n        ) : (\n          <p>Error: {data.Error}</p>\n        )\n      ) : (\n        <p>Loading data..</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import Header from '../../components/header';\nimport MovieList from '../../components/movielist';\n\nconst Home = () => {\n  return (\n    <div>\n      <Header />\n      <h1 className='bg-green-700 py-6 px-8 text-3xl text-white font-semibold text-center'>\n        Movies List\n      </h1>\n      <MovieList />\n    </div>\n  );\n};\n\nexport default Home;\n","import { useParams, Link } from 'react-router-dom';\nimport { useGetMovieDetailQuery } from '../../reducers/movie';\nimport { MdOutlineArrowBack, MdEmojiPeople } from 'react-icons/md';\nimport Lottie from 'react-lottie';\nimport animationData from '../../assets/lottie/paper-lottie.json';\nimport { useEffect, useState } from 'react';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nconst Details = () => {\n  const location = useParams();\n  const { data, isLoading } = useGetMovieDetailQuery(location.id);\n  console.log(data);\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setActors(data.Actors.split(','));\n    }\n    console.log(actors);\n  }, [data]);\n\n  return (\n    <div className='min-h-screen w-full flex'>\n      {isLoading ? (\n        <div className='min-h-screen w-full flex flex-col items-center justify-center'>\n          <Lottie options={defaultOptions} height={400} width={400} />\n          <p>Loading ...</p>\n        </div>\n      ) : (\n        <>\n          <div className='w-3/5 min-h-screen max-h-screen overflow-hidden flex'>\n            {data.Poster === 'N/A' ? (\n              <div className='min-h-screen w-full bg-green-200 flex items-center justify-center'>\n                <p>Image Not Available.</p>\n              </div>\n            ) : (\n              <>\n                <div\n                  className='w-full min-h-screen bg-no-repeat bg-cover bg-center filter brightness-50 blur transform scale-105'\n                  style={{ backgroundImage: `url(${data.Poster})` }}\n                ></div>\n                <div\n                  className='w-1/2 min-h-screen bg-no-repeat bg-contain absolute transform translate-x-1/4'\n                  style={{ backgroundImage: `url(${data.Poster})` }}\n                ></div>\n              </>\n            )}\n          </div>\n\n          {/* <img className='min-h-screen w-full' src={data.Poster} alt={data.Title} /> */}\n          <div className='w-2/5'>\n            <Link\n              className='p-4 flex h-20 items-center space-x-2 hover:underline'\n              to='/'\n            >\n              <MdOutlineArrowBack />\n              <p>Back to Movie List</p>\n            </Link>\n            <div className='px-10 py-4 w-4/5 space-y-2'>\n              <h1>{data.Title}</h1>\n              <h1>{data.Year}</h1>\n              <h1>Rated: {data.Rated}</h1>\n              <h1>Released: {data.Released}</h1>\n              <h1>Runtime: {data.Runtime}</h1>\n              <h1>Director: {data.Director}</h1>\n              <h1>Writer: {data.Writer}</h1>\n              <div>\n                <h1>Actors:</h1>\n                {actors.map((actor) => (\n                  <div className='flex items-center space-x-2'>\n                    <MdEmojiPeople />\n                    <p>{actor}</p>\n                  </div>\n                ))}\n              </div>\n              <h1>Plot: {data.Plot}</h1>\n              <h1>Language: {data.Language}</h1>\n              <h1>Box Office: {data.BoxOffice}</h1>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Details;\n","import { Routes, Route } from 'react-router-dom';\nimport Home from './containers/home';\nimport Details from './containers/details';\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path='/' index element={<Home />} />\n      <Route path='/movie-list/:id' element={<Details />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// Root reducer\nimport { combineReducers } from \"redux\";\nimport { pokemonApi, moviesApi } from \"./movie\";\nimport search from \"./search\";\n\nexport default combineReducers({\n  [pokemonApi.reducerPath]: pokemonApi.reducer,\n  [moviesApi.reducerPath] : moviesApi.reducer,\n  search\n})","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from '../reducers';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}